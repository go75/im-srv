// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v4.22.2
// source: ws.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *ProcessId) Reset() {
	*x = ProcessId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessId) ProtoMessage() {}

func (x *ProcessId) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessId.ProtoReflect.Descriptor instead.
func (*ProcessId) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Id2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId  uint32 `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId"`
	ProcessId uint32 `protobuf:"varint,2,opt,name=processId,proto3" json:"processId"`
}

func (x *Id2) Reset() {
	*x = Id2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id2) ProtoMessage() {}

func (x *Id2) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id2.ProtoReflect.Descriptor instead.
func (*Id2) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{1}
}

func (x *Id2) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *Id2) GetProcessId() uint32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

type Ids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *Ids) Reset() {
	*x = Ids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{2}
}

func (x *Ids) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{3}
}

func (x *Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 个人介绍
	Introduce string `protobuf:"bytes,3,opt,name=Introduce,proto3" json:"Introduce"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{5}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*UserMessage `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs"`
}

func (x *UserMessages) Reset() {
	*x = UserMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessages) ProtoMessage() {}

func (x *UserMessages) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessages.ProtoReflect.Descriptor instead.
func (*UserMessages) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{6}
}

func (x *UserMessages) GetMsgs() []*UserMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	// 发送方id
	SenderId uint32 `protobuf:"varint,2,opt,name=SenderId,proto3" json:"SenderId"`
	// 接收方id
	ReceiverId uint32 `protobuf:"varint,3,opt,name=ReceiverId,proto3" json:"ReceiverId"`
	// 消息类型 文字为0, 图片为1, 音频为2
	Type uint32 `protobuf:"varint,4,opt,name=Type,proto3" json:"Type"`
	// 消息内容
	Content string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content"`
}

func (x *UserMessage) Reset() {
	*x = UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessage) ProtoMessage() {}

func (x *UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessage.ProtoReflect.Descriptor instead.
func (*UserMessage) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{7}
}

func (x *UserMessage) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UserMessage) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *UserMessage) GetReceiverId() uint32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *UserMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	// 群聊id
	GroupId uint32 `protobuf:"varint,2,opt,name=GroupId,proto3" json:"GroupId"`
	// 发送方id
	SenderId uint32 `protobuf:"varint,3,opt,name=SenderId,proto3" json:"SenderId"`
	// 发送方名称
	SenderName string `protobuf:"bytes,4,opt,name=SenderName,proto3" json:"SenderName"`
	// 消息类型 文字为0, 图片为1, 音频为2
	Type uint32 `protobuf:"varint,5,opt,name=Type,proto3" json:"Type"`
	// 消息内容
	Content string `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content"`
}

func (x *GroupMessage) Reset() {
	*x = GroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessage) ProtoMessage() {}

func (x *GroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessage.ProtoReflect.Descriptor instead.
func (*GroupMessage) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{8}
}

func (x *GroupMessage) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GroupMessage) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupMessage) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *GroupMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *GroupMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GroupMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*GroupMessage `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs"`
}

func (x *GroupMessages) Reset() {
	*x = GroupMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessages) ProtoMessage() {}

func (x *GroupMessages) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessages.ProtoReflect.Descriptor instead.
func (*GroupMessages) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{9}
}

func (x *GroupMessages) GetMsgs() []*GroupMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type NewGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   uint32 `protobuf:"varint,1,opt,name=GroupId,proto3" json:"GroupId"`
	Username  string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username"`
	GroupName string `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName"`
}

func (x *NewGroupMessage) Reset() {
	*x = NewGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGroupMessage) ProtoMessage() {}

func (x *NewGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGroupMessage.ProtoReflect.Descriptor instead.
func (*NewGroupMessage) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{10}
}

func (x *NewGroupMessage) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *NewGroupMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *NewGroupMessage) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type NewGroupMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*NewGroupMessage `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs"`
}

func (x *NewGroupMessages) Reset() {
	*x = NewGroupMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGroupMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGroupMessages) ProtoMessage() {}

func (x *NewGroupMessages) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGroupMessages.ProtoReflect.Descriptor instead.
func (*NewGroupMessages) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{11}
}

func (x *NewGroupMessages) GetMsgs() []*NewGroupMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type SendGroupMsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds *Ids          `protobuf:"bytes,1,opt,name=userIds,proto3" json:"userIds"`
	Message *GroupMessage `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message"`
}

func (x *SendGroupMsgRes) Reset() {
	*x = SendGroupMsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupMsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupMsgRes) ProtoMessage() {}

func (x *SendGroupMsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupMsgRes.ProtoReflect.Descriptor instead.
func (*SendGroupMsgRes) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{12}
}

func (x *SendGroupMsgRes) GetUserIds() *Ids {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SendGroupMsgRes) GetMessage() *GroupMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	// 群聊名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 群主id
	MasterId uint32 `protobuf:"varint,3,opt,name=MasterId,proto3" json:"MasterId"`
	// 群聊简介
	Introduce string `protobuf:"bytes,4,opt,name=Introduce,proto3" json:"Introduce"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{13}
}

func (x *Group) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetMasterId() uint32 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *Group) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{14}
}

func (x *Groups) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type AddGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id2        *Id2   `protobuf:"bytes,1,opt,name=id2,proto3" json:"id2"`
	SenderName string `protobuf:"bytes,2,opt,name=senderName,proto3" json:"senderName"`
}

func (x *AddGroupReq) Reset() {
	*x = AddGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupReq) ProtoMessage() {}

func (x *AddGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupReq.ProtoReflect.Descriptor instead.
func (*AddGroupReq) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{15}
}

func (x *AddGroupReq) GetId2() *Id2 {
	if x != nil {
		return x.Id2
	}
	return nil
}

func (x *AddGroupReq) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

type AddGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterId  uint32 `protobuf:"varint,1,opt,name=masterId,proto3" json:"masterId"`
	GroupId   uint32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
	GroupName string `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName"`
}

func (x *AddGroupRes) Reset() {
	*x = AddGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupRes) ProtoMessage() {}

func (x *AddGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupRes.ProtoReflect.Descriptor instead.
func (*AddGroupRes) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{16}
}

func (x *AddGroupRes) GetMasterId() uint32 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *AddGroupRes) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AddGroupRes) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type AgreeNewGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderName string `protobuf:"bytes,1,opt,name=senderName,proto3" json:"senderName"`
	GroupId    uint32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *AgreeNewGroupReq) Reset() {
	*x = AgreeNewGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeNewGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeNewGroupReq) ProtoMessage() {}

func (x *AgreeNewGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeNewGroupReq.ProtoReflect.Descriptor instead.
func (*AgreeNewGroupReq) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{17}
}

func (x *AgreeNewGroupReq) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *AgreeNewGroupReq) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type AgreeNewGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
	ReceiverId uint32 `protobuf:"varint,2,opt,name=receiverId,proto3" json:"receiverId"`
}

func (x *AgreeNewGroupRes) Reset() {
	*x = AgreeNewGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeNewGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeNewGroupRes) ProtoMessage() {}

func (x *AgreeNewGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeNewGroupRes.ProtoReflect.Descriptor instead.
func (*AgreeNewGroupRes) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{18}
}

func (x *AgreeNewGroupRes) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *AgreeNewGroupRes) GetReceiverId() uint32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

type Ok struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok"`
}

func (x *Ok) Reset() {
	*x = Ok{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ws_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ok) ProtoMessage() {}

func (x *Ok) ProtoReflect() protoreflect.Message {
	mi := &file_ws_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ok.ProtoReflect.Descriptor instead.
func (*Ok) Descriptor() ([]byte, []int) {
	return file_ws_proto_rawDescGZIP(), []int{19}
}

func (x *Ok) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_ws_proto protoreflect.FileDescriptor

var file_ws_proto_rawDesc = []byte{
	0x0a, 0x08, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x03, 0x49, 0x64, 0x32, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x24, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x1b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x32,
	0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x73,
	0x67, 0x73, 0x22, 0x65, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x4e, 0x65, 0x77,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4e, 0x65,
	0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d,
	0x73, 0x67, 0x73, 0x22, 0x5a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x65, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0x45, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x03, 0x69, 0x64, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x49,
	0x64, 0x32, 0x52, 0x03, 0x69, 0x64, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x02, 0x4f, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x32, 0xfe, 0x04, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x04, 0x2e, 0x49, 0x64, 0x32, 0x1a, 0x0d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x1a, 0x06, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0f, 0x53,
	0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x03, 0x2e, 0x4f,
	0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x1a, 0x06,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x04, 0x2e, 0x49, 0x64, 0x32, 0x1a, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x05, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x06, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0e, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x04, 0x2e, 0x49, 0x64,
	0x32, 0x1a, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x04, 0x2e, 0x49, 0x64,
	0x32, 0x1a, 0x03, 0x2e, 0x4f, 0x6b, 0x12, 0x2d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x1a, 0x11, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x12, 0x0d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x1a, 0x07, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0c, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x12, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x05, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x07, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x35, 0x0a,
	0x0d, 0x41, 0x67, 0x72, 0x65, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x11,
	0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x4e, 0x65,
	0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x04, 0x2e, 0x49, 0x64, 0x32, 0x1a, 0x03, 0x2e, 0x4f,
	0x6b, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ws_proto_rawDescOnce sync.Once
	file_ws_proto_rawDescData = file_ws_proto_rawDesc
)

func file_ws_proto_rawDescGZIP() []byte {
	file_ws_proto_rawDescOnce.Do(func() {
		file_ws_proto_rawDescData = protoimpl.X.CompressGZIP(file_ws_proto_rawDescData)
	})
	return file_ws_proto_rawDescData
}

var file_ws_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_ws_proto_goTypes = []interface{}{
	(*ProcessId)(nil),        // 0: ProcessId
	(*Id2)(nil),              // 1: Id2
	(*Ids)(nil),              // 2: Ids
	(*Name)(nil),             // 3: Name
	(*User)(nil),             // 4: User
	(*Users)(nil),            // 5: Users
	(*UserMessages)(nil),     // 6: UserMessages
	(*UserMessage)(nil),      // 7: UserMessage
	(*GroupMessage)(nil),     // 8: GroupMessage
	(*GroupMessages)(nil),    // 9: GroupMessages
	(*NewGroupMessage)(nil),  // 10: NewGroupMessage
	(*NewGroupMessages)(nil), // 11: NewGroupMessages
	(*SendGroupMsgRes)(nil),  // 12: SendGroupMsgRes
	(*Group)(nil),            // 13: Group
	(*Groups)(nil),           // 14: Groups
	(*AddGroupReq)(nil),      // 15: AddGroupReq
	(*AddGroupRes)(nil),      // 16: AddGroupRes
	(*AgreeNewGroupReq)(nil), // 17: AgreeNewGroupReq
	(*AgreeNewGroupRes)(nil), // 18: AgreeNewGroupRes
	(*Ok)(nil),               // 19: Ok
}
var file_ws_proto_depIdxs = []int32{
	4,  // 0: Users.users:type_name -> User
	7,  // 1: UserMessages.msgs:type_name -> UserMessage
	8,  // 2: GroupMessages.msgs:type_name -> GroupMessage
	10, // 3: NewGroupMessages.msgs:type_name -> NewGroupMessage
	2,  // 4: SendGroupMsgRes.userIds:type_name -> Ids
	8,  // 5: SendGroupMsgRes.Message:type_name -> GroupMessage
	13, // 6: Groups.groups:type_name -> Group
	1,  // 7: AddGroupReq.id2:type_name -> Id2
	13, // 8: AgreeNewGroupRes.group:type_name -> Group
	1,  // 9: WebSocket.GetFriendSession:input_type -> Id2
	0,  // 10: WebSocket.GetNewFriend:input_type -> ProcessId
	7,  // 11: WebSocket.SaveUserMessage:input_type -> UserMessage
	0,  // 12: WebSocket.GetFriendList:input_type -> ProcessId
	1,  // 13: WebSocket.AddFriend:input_type -> Id2
	3,  // 14: WebSocket.GetFuzzyUserByUserName:input_type -> Name
	1,  // 15: WebSocket.AgreeNewFriend:input_type -> Id2
	1,  // 16: WebSocket.RefuseNewFriend:input_type -> Id2
	0,  // 17: WebSocket.GetGroupSession:input_type -> ProcessId
	0,  // 18: WebSocket.GetNewGroup:input_type -> ProcessId
	8,  // 19: WebSocket.SendGroupMsg:input_type -> GroupMessage
	0,  // 20: WebSocket.GetGroupList:input_type -> ProcessId
	15, // 21: WebSocket.AddGroup:input_type -> AddGroupReq
	3,  // 22: WebSocket.GetFuzzyGroupByGroupName:input_type -> Name
	17, // 23: WebSocket.AgreeNewGroup:input_type -> AgreeNewGroupReq
	1,  // 24: WebSocket.RefuseNewGroup:input_type -> Id2
	6,  // 25: WebSocket.GetFriendSession:output_type -> UserMessages
	5,  // 26: WebSocket.GetNewFriend:output_type -> Users
	19, // 27: WebSocket.SaveUserMessage:output_type -> Ok
	5,  // 28: WebSocket.GetFriendList:output_type -> Users
	4,  // 29: WebSocket.AddFriend:output_type -> User
	5,  // 30: WebSocket.GetFuzzyUserByUserName:output_type -> Users
	4,  // 31: WebSocket.AgreeNewFriend:output_type -> User
	19, // 32: WebSocket.RefuseNewFriend:output_type -> Ok
	9,  // 33: WebSocket.GetGroupSession:output_type -> GroupMessages
	11, // 34: WebSocket.GetNewGroup:output_type -> NewGroupMessages
	12, // 35: WebSocket.SendGroupMsg:output_type -> SendGroupMsgRes
	14, // 36: WebSocket.GetGroupList:output_type -> Groups
	16, // 37: WebSocket.AddGroup:output_type -> AddGroupRes
	14, // 38: WebSocket.GetFuzzyGroupByGroupName:output_type -> Groups
	18, // 39: WebSocket.AgreeNewGroup:output_type -> AgreeNewGroupRes
	19, // 40: WebSocket.RefuseNewGroup:output_type -> Ok
	25, // [25:41] is the sub-list for method output_type
	9,  // [9:25] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ws_proto_init() }
func file_ws_proto_init() {
	if File_ws_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ws_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGroupMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupMsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeNewGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeNewGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ws_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ok); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ws_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ws_proto_goTypes,
		DependencyIndexes: file_ws_proto_depIdxs,
		MessageInfos:      file_ws_proto_msgTypes,
	}.Build()
	File_ws_proto = out.File
	file_ws_proto_rawDesc = nil
	file_ws_proto_goTypes = nil
	file_ws_proto_depIdxs = nil
}
